---
- name: Zabbix SLA Multi-Report (NetBox 4.3.4, correct CFs)
  hosts: localhost
  gather_facts: false
  connection: local

  vars:
    report_out: "/runner/artifacts/{{ awx_job_id }}/sla_multi_report.xlsx"
    sla_codes_path: "/runner/artifacts/{{ awx_job_id }}/sla_codes.yml"
    netbox_validate_certs: false  # set true if your NetBox certs are valid

  tasks:
    # --- NetBox creds ---
    - name: Resolve NetBox API creds
      set_fact:
        nb_api: >-
          {{ NETBOX_API
             | default(lookup('env','NETBOX_API'), true)
             | default(lookup('env','NETBOX_URL'), true) }}
        nb_token: >-
          {{ NETBOX_TOKEN
             | default(lookup('env','NETBOX_TOKEN'), true)
             | default(lookup('env','NETBOX_API_TOKEN'), true) }}

    - name: Assert NetBox creds present
      assert:
        that:
          - nb_api is defined and nb_api | length > 0
          - nb_token is defined and nb_token | length > 0
        fail_msg: "NetBox creds not found. Provide NETBOX_API/NETBOX_TOKEN (vars) or use an AWX credential that injects them."

    - name: Normalise NetBox base URL (strip trailing slash)
      set_fact:
        nb_base: "{{ (nb_api | string) | regex_replace('/+$', '') }}"

    # --- Zabbix creds (THIS WAS MISSING) ---
    - name: Resolve Zabbix API creds
      set_fact:
        zb_url: >-
          {{ ZABBIX_API_URL
             | default(lookup('env','ZABBIX_API_URL'), true)
             | default(lookup('env','ZABBIX_URL'), true) }}
        zb_token: >-
          {{ ZABBIX_API_TOKEN
             | default(lookup('env','ZABBIX_API_TOKEN'), true)
             | default(lookup('env','ZABBIX_TOKEN'), true) }}

    - name: Assert Zabbix creds present
      assert:
        that:
          - zb_url is defined and zb_url | length > 0
          - zb_token is defined and zb_token | length > 0
        fail_msg: "Zabbix creds not found. Provide ZABBIX_API_URL/ZABBIX_API_TOKEN (vars) or use an AWX credential that injects them."

    # --- Pull roles from NetBox ---
    - name: Query ALL device roles (include custom_fields)
      uri:
        url: "{{ nb_base }}/api/dcim/device-roles/?limit=0&include=custom_fields"
        method: GET
        headers:
          Authorization: "Token {{ nb_token }}"
        return_content: true
        status_code: 200
        validate_certs: "{{ netbox_validate_certs }}"
      register: nb_roles_page

    - name: Extract roles
      set_fact:
        nb_roles: "{{ nb_roles_page.json.results | default([]) }}"

    - name: Select roles flagged for SLA reporting
      set_fact:
        roles_flagged: >-
          {{ nb_roles
             | selectattr('custom_fields', 'defined')
             | selectattr('custom_fields.sla_report_req', 'equalto', true)
             | list }}

    - name: Debug counts (sanity check)
      debug:
        msg:
          - "Total roles returned: {{ nb_roles | length }}"
          - "Roles with custom_fields.sla_report_req == true: {{ roles_flagged | length }}"
          - "First 5 flagged: {{ roles_flagged[:5] | map(attribute='name') | list }}"

    - name: Build SLA entries from flagged roles
      set_fact:
        sla_entries: "{{ (sla_entries | default([]))
                         + [ { 'code': (item.custom_fields.sla_report_code | default(item.slug) | string),
                               'name': (item.name | string) } ] }}"
      loop: "{{ roles_flagged }}"
      when: item is mapping

    - name: Fail if no SLA entries found
      fail:
        msg: "No device roles with custom_fields.sla_report_req == true found in NetBox."
      when: sla_entries | default([]) | length == 0

    - name: Write SLA codes file for the report script
      copy:
        dest: "{{ sla_codes_path }}"
        mode: "0644"
        content: "{{ {'sla_report_codes': sla_entries} | to_nice_yaml(indent=2) }}"

    # --- Run the Python report with ALL required env vars ---
    - name: Run uptime report script (multi-sheet; SLA list from NetBox)
      environment:
        ZABBIX_API_URL: "{{ zb_url }}"
        ZABBIX_API_TOKEN: "{{ zb_token }}"
        REPORT_OUTPUT: "{{ report_out }}"
        SLA_CODES_FILE: "{{ sla_codes_path }}"
        TAG_KEY: "{{ TAG_KEY | default('device', true) }}"
        DAYS: "{{ DAYS | default('30', true) }}"
      command: python3 zabbix_uptime_report.py

    - name: Email the report
      community.general.mail:
        host: smtp.timberlinkaustralia.com.au
        port: 25
        to: "{{ (email_recipients | default(email_recipients_default) | default([])) | join(', ') }}"
        from: awx@timberlinkaustralia.com.au
        subject: "SLA Multi-Report ({{ lookup('pipe','date +%Y-%m-%d') }})"
        body: "Attached is the latest multi-sheet SLA report (NetBox-driven)."
        attach:
          - "{{ report_out }}"
