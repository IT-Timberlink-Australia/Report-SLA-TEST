---
- name: Zabbix SLA Multi-Report (NetBox-driven via API)
  hosts: localhost
  gather_facts: false
  connection: local

  vars:
    report_out: "/runner/artifacts/{{ awx_job_id }}/sla_multi_report.xlsx"
    sla_codes_path: "/runner/artifacts/{{ awx_job_id }}/sla_codes.yml"
    # Flip to true if your NetBox cert chain is valid and should be verified
    netbox_validate_certs: false

  tasks:
    - name: Resolve NetBox API creds from vars/env (supports AWX credential injectors)
      set_fact:
        nb_api: >-
          {{ NETBOX_API
             | default(lookup('env','NETBOX_API'), true)
             | default(lookup('env','NETBOX_URL'), true) }}
        nb_token: >-
          {{ NETBOX_TOKEN
             | default(lookup('env','NETBOX_TOKEN'), true)
             | default(lookup('env','NETBOX_API_TOKEN'), true) }}

    - name: Assert NetBox creds present
      assert:
        that:
          - nb_api is defined and nb_api | length > 0
          - nb_token is defined and nb_token | length > 0
        fail_msg: "NetBox credentials not found. Provide NETBOX_API/NETBOX_TOKEN (vars) or use an AWX credential that injects them."

    - name: Normalise NetBox base URL (strip trailing slash)
      set_fact:
        nb_base: "{{ (nb_api | string) | regex_replace('/+$', '') }}"

    - name: Query NetBox device roles with SLA flag (single page, limit=0)
      uri:
        url: "{{ nb_base }}/api/dcim/device-roles/?cf_sla_report_req=True&limit=0"
        method: GET
        headers:
          Authorization: "Token {{ nb_token }}"
        return_content: true
        status_code: 200
        validate_certs: "{{ netbox_validate_certs }}"
      register: nb_roles_resp

    - name: Extract roles list
      set_fact:
        nb_roles: "{{ nb_roles_resp.json.results | default([]) }}"

    - name: Build SLA entries (code + name) from roles
      set_fact:
        sla_entries: "{{ (sla_entries | default([])) + [ {
                         'code': ((item.custom_fields.cf_sla_report_code | default(item.slug)) | string),
                         'name': (item.name | string)
                       } ] }}"
      loop: "{{ nb_roles }}"
      when:
        - item is mapping
        - item.custom_fields is defined
        - (item.custom_fields.cf_sla_report_req | default(false)) | bool

    - name: Fail if no SLA entries found
      fail:
        msg: "No device roles with cf_sla_report_req=True found in NetBox."
      when: sla_entries | default([]) | length == 0

    - name: Write SLA codes file for the report script
      copy:
        dest: "{{ sla_codes_path }}"
        mode: "0644"
        content: "{{ {'sla_report_codes': sla_entries} | to_nice_yaml(indent=2) }}"

    - name: Run uptime report script (multi-sheet; SLA list comes from NetBox)
      environment:
        ZABBIX_API_URL: "{{ ZABBIX_API_URL }}"
        ZABBIX_API_TOKEN: "{{ ZABBIX_API_TOKEN }}"
        REPORT_OUTPUT: "{{ report_out }}"
        SLA_CODES_FILE: "{{ sla_codes_path }}"
        TAG_KEY: "{{ TAG_KEY | default('device', true) }}"
        DAYS: "{{ DAYS | default('30', true) }}"
      command: python3 zabbix_uptime_report.py

    - name: Email the report
      community.general.mail:
        host: smtp.timberlinkaustralia.com.au
        port: 25
        to: "{{ (email_recipients | default(email_recipients_default) | default([])) | join(', ') }}"
        from: awx@timberlinkaustralia.com.au
        subject: "SLA Multi-Report ({{ lookup('pipe','date +%Y-%m-%d') }})"
        body: "Attached is the latest multi-sheet SLA report (NetBox-driven)."
        attach:
          - "{{ report_out }}"
